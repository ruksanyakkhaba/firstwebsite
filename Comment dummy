import { useState } from 'react';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faUser  } from '@fortawesome/free-solid-svg-icons';

const CommentSection = () => {
  const [commentText, setCommentText] = useState('');
  const [comments, setComments] = useState([]);
  const [showReplyInput, setShowReplyInput] = useState(null);

  const handleCommentSubmit = (e) => {
    e.preventDefault();
    if (commentText.length < 15) return;

    const newComment = {
      id: Date.now(),
      author: 'You',
      text: commentText,
      time: 'Just now',
      replies: []
    };

    setComments([newComment, ...comments]);
    setCommentText('');
  };

  const handleReplySubmit = (commentId, replyText) => {
    if (replyText.length < 15) return;

    const newReply = {
      id: Date.now(),
      author: 'You',
      text: replyText,
      time: 'Just now'
    };

    setComments(comments.map(comment => {
      if (comment.id === commentId) {
        return {
          ...comment,
          replies: [...comment.replies, newReply]
        };
      }
      return comment;
    }));
    setShowReplyInput(null);
  };

  return (
    <div className="container mx-auto py-8 max-w-3xl">
      <div className="p-6 bg-white rounded-xl shadow-lg">
        {/* Comment Input Section */}
        <div className="border-b pb-4 mb-6">
          <h2 className="text-2xl font-bold text-blue-800 mb-4">Join the Conversation</h2>
          <form onSubmit={handleCommentSubmit}>
            <div className="flex gap-3">
              <div className="w-10 h-10 rounded-full bg-blue-100 flex items-center justify-center text-blue-600 font-bold">
                <FontAwesomeIcon icon={faUser } />
              </div>
              <div className="flex-1">
                <textarea
                  className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 resize-none"
                  placeholder="Share your thoughts... (minimum 15 characters)"
                  rows="4"
                  value={commentText}
                  onChange={(e) => setCommentText(e.target.value)}
                />
                <div className="flex justify-between items-center mt-2">
                  <p className={`text-sm ${commentText.length >= 15 ? 'text-green-600' : 'text-gray-500'}`}>
                    {commentText.length}/15 characters
                  </p>
                  <button
                    type="submit"
                    className={`px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all ${
                      commentText.length < 15 ? 'opacity-50 cursor-not-allowed' : ''
                    }`}
                    disabled={commentText.length < 15}
                  >
                    Post Comment
                  </button>
                </div>
              </div>
            </div>
          </form>
        </div>
        
        {/* Comments Section */}
        <div>
          <h3 className="text-lg font-semibold text-gray-800 mb-4">
            Comments ({comments.length})
          </h3>
          
          {comments.map(comment => (
            <div key={comment.id} className="bg-gray-50 p-4 rounded-lg mb-4">
              <Comment
                comment={comment}
                onReply={() => setShowReplyInput(showReplyInput === comment.id ? null : comment.id)}
                showReplyInput={showReplyInput === comment.id}
                onReplySubmit={handleReplySubmit}
              />
              
              {/* Replies */}
              {comment.replies.length > 0 && (
                <div className="mt-4 pl-8 space-y-4">
                  {comment.replies.map(reply => (
                    <div key={reply.id} className="bg-white p-3 rounded-lg border border-gray-200">
                      <Comment
                        comment={reply}
                        isReply
                      />
                    </div>
                  ))}
                </div>
              )}
            </div>
          ))}
        </div>
      </div>
    </div>
  );
};

const Comment = ({ comment, onReply, showReplyInput, onReplySubmit, isReply = false }) => {
  const [replyText, setReplyText] = useState('');

  const handleReplySubmit = () => {
    onReplySubmit(comment.id, replyText);
    setReplyText('');
  };

  return (
    <div className="flex gap-3">
      <div className={`${isReply ? 'w-8 h-8 text-sm' : 'w-10 h-10'} rounded-full bg-blue-100 flex items-center justify-center text-blue-600 font-bold`}>
        {comment.author.charAt(0)}
      </div>
      <div className="flex-1">
        <div className="flex items-center justify-between">
          <div className="font-medium text-gray-800">{comment.author}</div>
          <div className="text-xs text-gray-500">{comment.time}</div>
        </div>
        <p className={`mt-1 ${isReply ? 'text-sm' : ''} text-gray-700`}>{comment.text}</p>
        {!isReply && (
          <button
            className="text-blue-600 text-sm font-medium hover:underline"
            onClick={onReply}
          >
            Reply
          </button>
        )}

        {/* Reply Input */}
        {showReplyInput && (
          <div className="mt-4 flex gap-3">
            <div className="w-8 h-8 rounded-full bg-blue-100 flex items-center justify-center text-blue-600 text-sm font-bold">
              <FontAwesomeIcon icon={faUser } size="xs" />
            </div>
            <div className="flex-1">
              <textarea
                className="w-full px-3 py-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 resize-none"
                placeholder="Write your reply... (minimum 15 characters)"
                rows="3"
                value={replyText}
                onChange={(e) => setReplyText(e.target.value)}
              />
              <div className="flex justify-between items-center mt-2">
                <p className={`text-xs ${replyText.length >= 15 ? 'text-green-600' : 'text-gray-500'}`}>
                  {replyText.length}/15 characters
                </p>
                <button
                  className={`px-3 py-1 text-sm bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none transition-all ${
                    replyText.length < 15 ? 'opacity-50 cursor-not-allowed' : ''
                  }`}
                  disabled={replyText.length < 15}
                  onClick={handleReplySubmit}
                >
                  Post Reply
                </button>
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default CommentSection;
